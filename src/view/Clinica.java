package view;

import control.PacienteFile;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Paciente;

/**
 *
 * @author ALAKAZAM
 */
public class Clinica extends javax.swing.JFrame {
   
    
    private Paciente paciente = new Paciente();
    private String caminhoArquivo;
  
    /**
     * Creates new form Clinica
     */
    public Clinica() {
        initComponents();
        carregaDados();
        radioNao.setSelected(true);
        labelExibirExclusao.setVisible(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkAlergia = new javax.swing.ButtonGroup();
        menuOpcao = new javax.swing.JTabbedPane();
        gridCadastroPaciente = new javax.swing.JPanel();
        cadastroPaciente1 = new javax.swing.JPanel();
        dataNascPaciente = new javax.swing.JFormattedTextField();
        cpfPaciente = new javax.swing.JFormattedTextField();
        nomePaciente = new javax.swing.JTextField();
        cadastrar = new javax.swing.JButton();
        limparCampos2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        labelAlergico = new javax.swing.JLabel();
        radioSim = new javax.swing.JRadioButton();
        radioNao = new javax.swing.JRadioButton();
        labelMatricula = new javax.swing.JLabel();
        comboBoxTpSanguineo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        consultarPacientes = new javax.swing.JPanel();
        consultaPanel = new javax.swing.JPanel();
        labelPesquisaPaciente = new javax.swing.JLabel();
        inputPesquisaPaciente = new javax.swing.JTextField();
        btnSalvarAlteracao = new javax.swing.JButton();
        labelCPFPaciente = new javax.swing.JLabel();
        labelIdadePaciente = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        checkinAlergia = new javax.swing.JLabel();
        inputIdadePaciente = new javax.swing.JFormattedTextField();
        radioBtnSim = new javax.swing.JRadioButton();
        radioBtnNao = new javax.swing.JRadioButton();
        inputCPFPaciente = new javax.swing.JFormattedTextField();
        inputNomePaciente = new javax.swing.JTextField();
        labelNomePaciente = new javax.swing.JLabel();
        btnPesquisaPaciente = new javax.swing.JButton();
        btnEscolherArquivo = new javax.swing.JButton();
        validaArquivo = new javax.swing.JLabel();
        btnLimparCampos = new javax.swing.JButton();
        labelExibirExclusao = new javax.swing.JLabel();
        comboBoxInputTpSanguineo = new javax.swing.JComboBox<>();
        limparPesquisa = new javax.swing.JButton();
        escolheArquivo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPaciente = new javax.swing.JTable();
        pesquisaAvancada = new javax.swing.JButton();
        jtxtPesquisaAvancada = new javax.swing.JTextField();
        btnRecarrega = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        menuOpcao.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                menuOpcaoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        menuOpcao.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                menuOpcaoComponentMoved(evt);
            }
        });

        gridCadastroPaciente.setBackground(new java.awt.Color(255, 255, 255));
        gridCadastroPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cadastroPaciente1.setBackground(new java.awt.Color(241, 244, 245));
        cadastroPaciente1.setForeground(new java.awt.Color(255, 255, 255));

        try {
            dataNascPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            cpfPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        nomePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomePacienteKeyReleased(evt);
            }
        });

        cadastrar.setBackground(new java.awt.Color(0, 0, 0));
        cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        cadastrar.setText("Salvar");
        cadastrar.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                cadastrar1MouseWheelMoved(evt);
            }
        });
        cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cadastrar1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cadastrar1MouseExited(evt);
            }
        });
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrar1ActionPerformed(evt);
            }
        });

        limparCampos2.setBackground(new java.awt.Color(0, 0, 0));
        limparCampos2.setForeground(new java.awt.Color(255, 255, 255));
        limparCampos2.setText("Limpar Campos");
        limparCampos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limparCampos2MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel11.setText("Nome");

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel12.setText("CPF");

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel14.setText("Data de nascimento");

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel15.setText("tipo Sanguineo");

        labelAlergico.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelAlergico.setText("Possui alergia?");

        checkAlergia.add(radioSim);
        radioSim.setText("Sim");

        checkAlergia.add(radioNao);
        radioNao.setText("NÃ£o");

        labelMatricula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        comboBoxTpSanguineo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-", " ", " ", " " }));

        jLabel1.setText("Matricula:");

        javax.swing.GroupLayout cadastroPaciente1Layout = new javax.swing.GroupLayout(cadastroPaciente1);
        cadastroPaciente1.setLayout(cadastroPaciente1Layout);
        cadastroPaciente1Layout.setHorizontalGroup(
            cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                        .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)))
                    .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                        .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataNascPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                                .addComponent(labelAlergico)
                                .addGap(18, 18, 18)
                                .addComponent(radioSim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioNao))
                            .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxTpSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                        .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(limparCampos2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(95, 95, 95))
            .addGroup(cadastroPaciente1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cadastroPaciente1Layout.setVerticalGroup(
            cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastroPaciente1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cpfPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataNascPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxTpSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAlergico)
                    .addComponent(radioSim)
                    .addComponent(radioNao))
                .addGap(52, 52, 52)
                .addGroup(cadastroPaciente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(limparCampos2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout gridCadastroPacienteLayout = new javax.swing.GroupLayout(gridCadastroPaciente);
        gridCadastroPaciente.setLayout(gridCadastroPacienteLayout);
        gridCadastroPacienteLayout.setHorizontalGroup(
            gridCadastroPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cadastroPaciente1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gridCadastroPacienteLayout.setVerticalGroup(
            gridCadastroPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cadastroPaciente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        menuOpcao.addTab("Cadastro", gridCadastroPaciente);

        consultaPanel.setBackground(new java.awt.Color(241, 244, 245));
        consultaPanel.setPreferredSize(new java.awt.Dimension(681, 397));

        labelPesquisaPaciente.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        labelPesquisaPaciente.setText("Pesquisa Paciente");

        inputPesquisaPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputPesquisaPacienteKeyReleased(evt);
            }
        });

        btnSalvarAlteracao.setBackground(new java.awt.Color(0, 0, 0));
        btnSalvarAlteracao.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarAlteracao.setText("Alterar");
        btnSalvarAlteracao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarAlteracaoMouseClicked(evt);
            }
        });
        btnSalvarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracaoActionPerformed(evt);
            }
        });

        labelCPFPaciente.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelCPFPaciente.setText("CPF");

        labelIdadePaciente.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelIdadePaciente.setText("Data de nascimento");

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel13.setText("tipo Sanguineo");

        checkinAlergia.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        checkinAlergia.setText("Possui alergia?");

        try {
            inputIdadePaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        checkAlergia.add(radioBtnSim);
        radioBtnSim.setText("Sim");

        checkAlergia.add(radioBtnNao);
        radioBtnNao.setText("NÃ£o");

        try {
            inputCPFPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        inputNomePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputNomePacienteKeyReleased(evt);
            }
        });

        labelNomePaciente.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelNomePaciente.setText("Nome");

        btnPesquisaPaciente.setBackground(new java.awt.Color(0, 0, 0));
        btnPesquisaPaciente.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisaPaciente.setText("Pesquisar");
        btnPesquisaPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPesquisaPacienteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPesquisaPacienteMouseEntered(evt);
            }
        });
        btnPesquisaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaPacienteActionPerformed(evt);
            }
        });

        btnEscolherArquivo.setBackground(new java.awt.Color(0, 0, 0));
        btnEscolherArquivo.setForeground(new java.awt.Color(255, 255, 255));
        btnEscolherArquivo.setText("Escolher arquivo");
        btnEscolherArquivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEscolherArquivoMouseClicked(evt);
            }
        });
        btnEscolherArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherArquivoActionPerformed(evt);
            }
        });

        btnLimparCampos.setBackground(new java.awt.Color(0, 0, 0));
        btnLimparCampos.setForeground(new java.awt.Color(255, 255, 255));
        btnLimparCampos.setText("Limpar campos");
        btnLimparCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimparCamposMouseClicked(evt);
            }
        });

        labelExibirExclusao.setBackground(new java.awt.Color(0, 0, 0));
        labelExibirExclusao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/lixeira.png"))); // NOI18N
        labelExibirExclusao.setText("Excluir paciente");
        labelExibirExclusao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelExibirExclusao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelExibirExclusaoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                labelExibirExclusaoMouseReleased(evt);
            }
        });

        comboBoxInputTpSanguineo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-", " ", " ", " " }));

        limparPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/limparCampo.png"))); // NOI18N
        limparPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limparPesquisaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout consultaPanelLayout = new javax.swing.GroupLayout(consultaPanel);
        consultaPanel.setLayout(consultaPanelLayout);
        consultaPanelLayout.setHorizontalGroup(
            consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPanelLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultaPanelLayout.createSequentialGroup()
                        .addComponent(labelNomePaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelExibirExclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(consultaPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxInputTpSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(consultaPanelLayout.createSequentialGroup()
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(consultaPanelLayout.createSequentialGroup()
                                .addComponent(checkinAlergia)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnSim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioBtnNao))
                            .addComponent(btnSalvarAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(consultaPanelLayout.createSequentialGroup()
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(consultaPanelLayout.createSequentialGroup()
                                .addComponent(labelCPFPaciente)
                                .addGap(21, 21, 21)
                                .addComponent(inputCPFPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(163, 163, 163))
                            .addGroup(consultaPanelLayout.createSequentialGroup()
                                .addComponent(labelPesquisaPaciente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(consultaPanelLayout.createSequentialGroup()
                                        .addComponent(btnPesquisaPaciente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnEscolherArquivo))
                                    .addComponent(inputPesquisaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, consultaPanelLayout.createSequentialGroup()
                                .addComponent(labelIdadePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputIdadePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(validaArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limparPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        consultaPanelLayout.setVerticalGroup(
            consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(validaArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPesquisaPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(inputPesquisaPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(limparPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEscolherArquivo)
                    .addComponent(btnPesquisaPaciente))
                .addGap(36, 36, 36)
                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultaPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCPFPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCPFPaciente))
                        .addGap(18, 18, 18)
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelIdadePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputIdadePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(comboBoxInputTpSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkinAlergia)
                            .addComponent(radioBtnSim)
                            .addComponent(radioBtnNao)))
                    .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelNomePaciente)
                        .addComponent(labelExibirExclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(consultaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout consultarPacientesLayout = new javax.swing.GroupLayout(consultarPacientes);
        consultarPacientes.setLayout(consultarPacientesLayout);
        consultarPacientesLayout.setHorizontalGroup(
            consultarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 647, Short.MAX_VALUE)
            .addGroup(consultarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(consultaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
        );
        consultarPacientesLayout.setVerticalGroup(
            consultarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 443, Short.MAX_VALUE)
            .addGroup(consultarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(consultaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
        );

        menuOpcao.addTab("ExclusÃ£o/AlteraÃ§Ã£o", consultarPacientes);

        escolheArquivo.setBackground(new java.awt.Color(241, 244, 245));

        tabelPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome Completo", "CPF", "Data de Nascimento", "Tipo Sanguineo", "Alergico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelPaciente);

        pesquisaAvancada.setBackground(new java.awt.Color(0, 0, 0));
        pesquisaAvancada.setForeground(new java.awt.Color(255, 255, 255));
        pesquisaAvancada.setText("Pesquisar");
        pesquisaAvancada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisaAvancadaMouseClicked(evt);
            }
        });
        pesquisaAvancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaAvancadaActionPerformed(evt);
            }
        });

        jtxtPesquisaAvancada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtPesquisaAvancadaKeyReleased(evt);
            }
        });

        btnRecarrega.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/refresh.png"))); // NOI18N
        btnRecarrega.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRecarregaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout escolheArquivoLayout = new javax.swing.GroupLayout(escolheArquivo);
        escolheArquivo.setLayout(escolheArquivoLayout);
        escolheArquivoLayout.setHorizontalGroup(
            escolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
            .addGroup(escolheArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRecarrega, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtxtPesquisaAvancada, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pesquisaAvancada, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        escolheArquivoLayout.setVerticalGroup(
            escolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escolheArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(escolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRecarrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pesquisaAvancada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtxtPesquisaAvancada, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuOpcao.addTab("Mostrar todos / Especifico", escolheArquivo);

        jPanel1.setBackground(new java.awt.Color(241, 244, 245));

        jLabel3.setText("Aba Mostrar Todos/Especifico: Utilize o tipo sanguineo que deseja pesquisar. Ex: ab+, o-. etc.");

        jLabel4.setText("Aba Mostrar Todos/Especifico: Utilize alergico para pessoas alergicas e alergico* para nÃ£o alergicos.");

        jLabel5.setText("Obs: Caso nÃ£o selecione um arquivo, por padrÃ£o o sistema ira procurar na area de trabalho o  arquivo informacoesPacientes.");

        jLabel2.setText("Desenvolvido por: Igor/ Erickson  - SI");

        jLabel6.setText("Aba ExclusÃ£o/AlteraÃ§Ã£o: Ao efetuar a consulta atravÃ©s do nome, aparecerÃ¡ o icone de exclusÃ£o.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        menuOpcao.addTab("About", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuOpcao)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuOpcao)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     *
     */
    public void carregaDados(){
        DefaultTableModel modelTabel = (DefaultTableModel) tabelPaciente.getModel();
        modelTabel.setNumRows(0);
        PacienteFile dadosPaciente = new PacienteFile();
        try{
            if(dadosPaciente.consultarTodosPaciente(this,caminhoArquivo) != null){
                for (Paciente pacientes : dadosPaciente.consultarTodosPaciente(this,caminhoArquivo)) {
                    labelMatricula.setText(String.valueOf(pacientes.getCodigo()+1));
                    Object[] dados  = {pacientes.getNomePaciente(),pacientes.getCpf(),pacientes.getIdade(),pacientes.getTipoSanguineo(),pacientes.getCheckAlergia()};
                    modelTabel.addRow(dados);
                }
            }
        }catch(NullPointerException | ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Erro carregar os dados, verifique o arquivo!");
        }
    }
    
    public void limpaCampo(){
        nomePaciente.setText("");
        cpfPaciente.setText("");
        dataNascPaciente.setText("");
    }
    
    /**
     * @return 
     */
    public boolean verificarInput(){
        if(!inputPesquisaPaciente.getText().equals("") && inputPesquisaPaciente.getText() != null && !inputPesquisaPaciente.getText().equals(" ")){
            return true;
        }else{
            return false;
        }
    }
    
    /**
     * 
     * @param nome
     * @param cpf
     * @param dataNasc
     * @return 
     */
    public boolean verificarInputs(JTextField nome,JFormattedTextField cpf,JFormattedTextField dataNasc){
        if(!nome.getText().equals("") && nome.getText() != null && !nome.getText().equals(" ") &&
            !cpf.getText().equals("   .   .   -  ") && cpf.getText() != null && !cpf.getText().equals(" ") &&
            !dataNasc.getText().equals("  /  /    ") && dataNasc.getText() != null && !dataNasc.getText().equals(" ")
           ){
            return true;
        }else{
            return false;
        }
    }
    
    private void menuOpcaoComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_menuOpcaoComponentMoved
        
    }//GEN-LAST:event_menuOpcaoComponentMoved

    private void menuOpcaoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_menuOpcaoAncestorAdded
       
    }//GEN-LAST:event_menuOpcaoAncestorAdded

    private void cadastrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrar1ActionPerformed
        PacienteFile pacienteFile = new PacienteFile();
        if(verificarInputs(nomePaciente,cpfPaciente,dataNascPaciente)){
            char resp;
            if(radioSim.isSelected()){
                resp = 's';
            }else{
                resp = 'n';
            }
            String nome = this.nomePaciente.getText();
            String sangue = String.valueOf(this.comboBoxTpSanguineo.getSelectedItem());
            String cpf = this.cpfPaciente.getText();
            String idade = this.dataNascPaciente.getText();
            Paciente pacienteNovo = new Paciente(nome,sangue,cpf,idade,resp);
            int codigo = !labelMatricula.getText().equals("") ? Integer.parseInt(labelMatricula.getText()) : 0;
            pacienteNovo.setCodigo(codigo);
            if(pacienteFile.cadastraPaciente(pacienteNovo)){
                JOptionPane.showMessageDialog(this, "Cadastro efetuado com Sucesso!");
                carregaDados();
                limpaCampo();
            }else{
                JOptionPane.showMessageDialog(this, "NÃ£o foi possivel efetuar o cadastro!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
        }
    }//GEN-LAST:event_cadastrar1ActionPerformed

    private void cadastrar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrar1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastrar1MouseExited

    private void cadastrar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrar1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastrar1MouseEntered

    private void cadastrar1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_cadastrar1MouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastrar1MouseWheelMoved

    private void nomePacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomePacienteKeyReleased
        nomePaciente.setText(nomePaciente.getText().toUpperCase());
    }//GEN-LAST:event_nomePacienteKeyReleased

    private void btnEscolherArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherArquivoActionPerformed
        try{
            JFileChooser f = new JFileChooser();
            f.showSaveDialog(this);
            caminhoArquivo = f.getSelectedFile().getAbsolutePath();
            if(caminhoArquivo.contains(".txt")){
                validaArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/check.png")));
                caminhoArquivo = f.getSelectedFile().getAbsolutePath();
            }
            carregaDados();
        }catch(NullPointerException | StringIndexOutOfBoundsException e){
            caminhoArquivo = null;
            JOptionPane.showMessageDialog(this, "Insira apenas arquivos com a extensÃ£o txt");
            validaArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/incorret.png")));
        }
    }//GEN-LAST:event_btnEscolherArquivoActionPerformed

    private void btnPesquisaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaPacienteActionPerformed
        
    }//GEN-LAST:event_btnPesquisaPacienteActionPerformed

    private void inputNomePacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNomePacienteKeyReleased
        inputNomePaciente.setText(inputNomePaciente.getText().toUpperCase());
    }//GEN-LAST:event_inputNomePacienteKeyReleased

    private void inputPesquisaPacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPesquisaPacienteKeyReleased
        inputPesquisaPaciente.setText(inputPesquisaPaciente.getText().toUpperCase());
    }//GEN-LAST:event_inputPesquisaPacienteKeyReleased

    private void pesquisaAvancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaAvancadaActionPerformed
   
    }//GEN-LAST:event_pesquisaAvancadaActionPerformed

    private void labelExibirExclusaoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelExibirExclusaoMouseReleased
        
    }//GEN-LAST:event_labelExibirExclusaoMouseReleased

    private void labelExibirExclusaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelExibirExclusaoMouseClicked
        PacienteFile dadosPaciente = new PacienteFile();
        if(dadosPaciente.excluirPaciente(this, inputNomePaciente.getText())){
            JOptionPane.showMessageDialog(this, "Paciente excluido com sucesso!");
            carregaDados();
        }else{
            JOptionPane.showMessageDialog(this, "Paciente nÃ£o encontrado!");
        }
    }//GEN-LAST:event_labelExibirExclusaoMouseClicked

    private void btnSalvarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracaoActionPerformed
        PacienteFile dadosPaciente = new PacienteFile();
        if(verificarInputs(inputNomePaciente,inputCPFPaciente,inputIdadePaciente)){
            char resp;
            if(radioBtnSim.isSelected()){
                resp = 's';
            }else{
                resp = 'n';
            }
            String nome = this.inputNomePaciente.getText();
            String sangue = String.valueOf(this.comboBoxInputTpSanguineo.getSelectedItem());
            String cpf = this.inputCPFPaciente.getText();
            String idade = this.inputIdadePaciente.getText();
            Paciente pacienteNovo = new Paciente(nome,sangue,cpf,idade,resp);
            if(dadosPaciente.alterarDadosPaciente(this, pacienteNovo,inputPesquisaPaciente.getText(),caminhoArquivo)){
                JOptionPane.showMessageDialog(this, "AlteraÃ§Ã£o efetuado com Sucesso!");
                carregaDados();
            }else{
                JOptionPane.showMessageDialog(this, "NÃ£o foi possivel efetuar a alteraÃ§Ã£o!");
            }
        }else{
            
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
        }
    }//GEN-LAST:event_btnSalvarAlteracaoActionPerformed

    private void limparCampos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparCampos2MouseClicked
        nomePaciente.setText("");
        cpfPaciente.setText("");
        dataNascPaciente.setText("");
    }//GEN-LAST:event_limparCampos2MouseClicked

    private void btnLimparCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparCamposMouseClicked
        inputNomePaciente.setText("");
        inputCPFPaciente.setText("");
        inputIdadePaciente.setText("");
        
    }//GEN-LAST:event_btnLimparCamposMouseClicked

    private void pesquisaAvancadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisaAvancadaMouseClicked
        if(!jtxtPesquisaAvancada.getText().equals("")){
            DefaultTableModel modelTabel = (DefaultTableModel) tabelPaciente.getModel();
            modelTabel.setNumRows(0);
            PacienteFile novaConsulta = new PacienteFile();
            for(Paciente pacientes : novaConsulta.consultaEspecifica(this, jtxtPesquisaAvancada.getText(),caminhoArquivo)){
                if(jtxtPesquisaAvancada.getText().equals("ALERGICO")){
                    if(pacientes.getCheckAlergia() == 's'){
                        Object[] dados  = {pacientes.getNomePaciente(),pacientes.getCpf(),pacientes.getIdade(),pacientes.getTipoSanguineo(),pacientes.getCheckAlergia()};
                        modelTabel.addRow(dados);
                    } 
                    
                }else if(jtxtPesquisaAvancada.getText().equals("ALERGICO*")){
                    if(pacientes.getCheckAlergia() == 'n'){
                        Object[] dados  = {pacientes.getNomePaciente(),pacientes.getCpf(),pacientes.getIdade(),pacientes.getTipoSanguineo(),pacientes.getCheckAlergia()};
                        modelTabel.addRow(dados);
                    }
                }
                if(pacientes.getTipoSanguineo().equals(jtxtPesquisaAvancada.getText())){
                        Object[] dados  = {pacientes.getNomePaciente(),pacientes.getCpf(),pacientes.getIdade(),pacientes.getTipoSanguineo(),pacientes.getCheckAlergia()};
                        modelTabel.addRow(dados);
                }
                if(pacientes.getIdade().equals(jtxtPesquisaAvancada.getText())){
                    labelMatricula.setText(String.valueOf(pacientes.getCodigo()+1));
                    Object[] dados  = {pacientes.getNomePaciente(),pacientes.getCpf(),pacientes.getIdade(),pacientes.getTipoSanguineo(),pacientes.getCheckAlergia()};
                    modelTabel.addRow(dados);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Insira algo para pesquisar");
        }
    }//GEN-LAST:event_pesquisaAvancadaMouseClicked

    private void btnRecarregaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRecarregaMouseClicked
        carregaDados();
    }//GEN-LAST:event_btnRecarregaMouseClicked

    private void jtxtPesquisaAvancadaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPesquisaAvancadaKeyReleased
        jtxtPesquisaAvancada.setText(jtxtPesquisaAvancada.getText().toUpperCase());
    }//GEN-LAST:event_jtxtPesquisaAvancadaKeyReleased

    private void btnPesquisaPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisaPacienteMouseClicked
        if(verificarInput()){
           try{
               PacienteFile novaConsulta = new PacienteFile();
                paciente = novaConsulta.consultarPaciente(this, inputPesquisaPaciente.getText(),caminhoArquivo);
                inputNomePaciente.setText(paciente.getNomePaciente());
                inputIdadePaciente.setText(paciente.getIdade());
                comboBoxInputTpSanguineo.setSelectedItem(paciente.getTipoSanguineo());
                inputCPFPaciente.setText(paciente.getCpf());

                if(paciente.getCheckAlergia() == 's'){
                    radioBtnSim.setSelected(true);
                }else{
                    radioBtnNao.setSelected(true);
                }
                labelExibirExclusao.setVisible(true);
                
           }catch(NullPointerException ex){
               JOptionPane.showMessageDialog(this, "Usuario nÃ£o encontrado");
           }
        }else{
            JOptionPane.showMessageDialog(this, "Digite o nome do paciente que deseja excluir");
        }
    }//GEN-LAST:event_btnPesquisaPacienteMouseClicked

    private void limparPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparPesquisaMouseClicked
        inputPesquisaPaciente.setText("");
    }//GEN-LAST:event_limparPesquisaMouseClicked

    private void btnPesquisaPacienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPesquisaPacienteMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisaPacienteMouseEntered

    private void btnEscolherArquivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEscolherArquivoMouseClicked
        
    }//GEN-LAST:event_btnEscolherArquivoMouseClicked

    private void btnSalvarAlteracaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarAlteracaoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarAlteracaoMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Clinica().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscolherArquivo;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnPesquisaPaciente;
    private javax.swing.JButton btnRecarrega;
    private javax.swing.JButton btnSalvarAlteracao;
    private javax.swing.JButton cadastrar;
    private javax.swing.JPanel cadastroPaciente1;
    private javax.swing.ButtonGroup checkAlergia;
    private javax.swing.JLabel checkinAlergia;
    private javax.swing.JComboBox<String> comboBoxInputTpSanguineo;
    private javax.swing.JComboBox<String> comboBoxTpSanguineo;
    private javax.swing.JPanel consultaPanel;
    private javax.swing.JPanel consultarPacientes;
    private javax.swing.JFormattedTextField cpfPaciente;
    private javax.swing.JFormattedTextField dataNascPaciente;
    private javax.swing.JPanel escolheArquivo;
    private javax.swing.JPanel gridCadastroPaciente;
    private javax.swing.JFormattedTextField inputCPFPaciente;
    private javax.swing.JFormattedTextField inputIdadePaciente;
    private javax.swing.JTextField inputNomePaciente;
    private javax.swing.JTextField inputPesquisaPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jtxtPesquisaAvancada;
    private javax.swing.JLabel labelAlergico;
    private javax.swing.JLabel labelCPFPaciente;
    private javax.swing.JLabel labelExibirExclusao;
    private javax.swing.JLabel labelIdadePaciente;
    private javax.swing.JLabel labelMatricula;
    private javax.swing.JLabel labelNomePaciente;
    private javax.swing.JLabel labelPesquisaPaciente;
    private javax.swing.JButton limparCampos2;
    private javax.swing.JButton limparPesquisa;
    public javax.swing.JTabbedPane menuOpcao;
    private javax.swing.JTextField nomePaciente;
    private javax.swing.JButton pesquisaAvancada;
    private javax.swing.JRadioButton radioBtnNao;
    private javax.swing.JRadioButton radioBtnSim;
    private javax.swing.JRadioButton radioNao;
    private javax.swing.JRadioButton radioSim;
    private javax.swing.JTable tabelPaciente;
    private javax.swing.JLabel validaArquivo;
    // End of variables declaration//GEN-END:variables
}
